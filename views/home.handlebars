<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestor de Productos</title>
    <link rel="stylesheet" href="styles.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h2, h3 {
            color: #333;
        }

        form {
            background: #fff;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            max-width: 400px;
            width: 100%;
        }

        form h3 {
            margin-top: 0;
        }

        input[type="text"], input[type="number"], select {
            width: calc(100% - 20px);
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        button {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 10px 15px;
            cursor: pointer;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        button:hover {
            background-color: #0056b3;
        }

        ul {
            list-style-type: none;
            padding: 0;
            max-width: 600px;
            width: 100%;
        }

        li {
            background: #fff;
            margin: 10px 0;
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        button.delete {
            background-color: #dc3545;
        }

        button.delete:hover {
            background-color: #c82333;
        }

        button.add-to-cart {
            background-color: #28a745;
        }

        button.add-to-cart:hover {
            background-color: #218838;
        }

        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        .pagination a {
            padding: 8px 16px;
            margin: 0 5px;
            text-decoration: none;
            background-color: #007bff;
            color: white;
            border-radius: 5px;
        }

        .pagination a:hover {
            background-color: #0056b3;
        }

        #notification {
            background-color: #28a745;
            color: #fff;
            padding: 10px;
            border-radius: 5px;
            position: fixed;
            top: 20px;
            right: 20px;
            display: none;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body>
    <h2>Lista de Productos</h2>

    <!-- Formulario de búsqueda -->
    <form id="searchForm" method="GET" action="/products">
        <h3>Buscar Productos</h3>
        <input type="text" name="query" placeholder="Buscar por categoría o nombre" value="{{query}}">
        <input type="number" name="limit" placeholder="Límite" value="{{limit}}" min="1">
        <input type="number" name="page" placeholder="Página" value="{{page}}" min="1">
        <select name="sort">
            <option value="asc" {{#if (eq sort 'asc')}}selected{{/if}}>Ascendente por precio</option>
            <option value="desc" {{#if (eq sort 'desc')}}selected{{/if}}>Descendente por precio</option>
        </select>
        <button type="submit">Buscar</button>
    </form>

    <!-- Lista de productos -->
    <ul id="productList">
        {{#each products}}
            <li data-id="{{this._id}}">
                <span><strong>{{this.title}}</strong> - ${{this.price}}</span>
                <button class="delete">Eliminar</button>
                <button class="add-to-cart">Agregar al carrito</button>
            </li>
        {{/each}}
    </ul>

    <!-- Paginación -->
    <div class="pagination">
        {{#if hasPrevPage}}
            <a href="/products?page={{prevPage}}&limit={{limit}}&query={{query}}&sort={{sort}}">Anterior</a>
        {{/if}}
        <span>Página {{page}} de {{totalPages}}</span>
        {{#if hasNextPage}}
            <a href="/products?page={{nextPage}}&limit={{limit}}&query={{query}}&sort={{sort}}">Siguiente</a>
        {{/if}}
    </div>

    <div id="notification">Producto agregado con éxito!</div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const productList = document.getElementById('productList');
            const notification = document.getElementById('notification');

            function showNotification(message = "Acción completada con éxito") {
                notification.textContent = message;
                notification.style.display = 'block';
                setTimeout(() => {
                    notification.style.display = 'none';
                }, 3000);
            }

            productList.addEventListener('click', (event) => {
                if (event.target.classList.contains('delete')) {
                    const productItem = event.target.closest('li');
                    const productId = productItem.getAttribute('data-id');

                    fetch(`/api/products/${productId}`, { method: 'DELETE' })
                        .then((response) => {
                            if (response.ok) {
                                productItem.remove();
                                showNotification('Producto eliminado correctamente.');
                            } else {
                                showNotification('Error al eliminar el producto.');
                            }
                        })
                        .catch(() => {
                            showNotification('Error al procesar la solicitud.');
                        });
                }

                if (event.target.classList.contains('add-to-cart')) {
                    const productItem = event.target.closest('li');
                    const productId = productItem.getAttribute('data-id');

                    fetch(`/api/carts/cartId/product/${productId}`, { method: 'POST' })
                        .then((response) => {
                            if (response.ok) {
                                showNotification('Producto agregado al carrito.');
                            } else {
                                showNotification('Error al agregar al carrito.');
                            }
                        })
                        .catch(() => {
                            showNotification('Error al procesar la solicitud.');
                        });
                }
            });
        });
    </script>
</body>
</html>
